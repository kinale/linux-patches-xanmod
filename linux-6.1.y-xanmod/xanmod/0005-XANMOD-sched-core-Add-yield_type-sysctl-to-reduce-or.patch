From ef2a8326fe1cb4924a89b57d75c59736903c9141 Mon Sep 17 00:00:00 2001
From: Alexandre Frade <kernel@xanmod.org>
Date: Thu, 15 Sep 2022 02:45:40 +0000
Subject: [PATCH 05/18] XANMOD: sched/core: Add yield_type sysctl to reduce or
 disable sched_yield

[1] https://github.com/hamadmarri/cacule-cpu-scheduler/issues/35

Signed-off-by: Alexandre Frade <kernel@xanmod.org>
---
 kernel/sched/core.c | 15 ++++++++++++++-
 kernel/sysctl.c     | 10 ++++++++++
 2 files changed, 24 insertions(+), 1 deletion(-)

diff --git a/kernel/sched/core.c b/kernel/sched/core.c
index 28dcd3879977..72f0c4dfe152 100644
--- a/kernel/sched/core.c
+++ b/kernel/sched/core.c
@@ -138,6 +138,14 @@ __read_mostly int sysctl_resched_latency_warn_ms = 100;
 __read_mostly int sysctl_resched_latency_warn_once = 1;
 #endif /* CONFIG_SCHED_DEBUG */

+/*
+ * Choose the yield level that will perform.
+ * 0: No yield.
+ * 1: Yield only to better priority/deadline tasks.
+ * 2: Re-queue current tasks. (default CFS)
+ */
+__read_mostly int sysctl_sched_yield_type = 0;
+
 /*
  * Number of tasks to iterate in a single balance run.
  * Limited because this is done with IRQs disabled.
@@ -8268,10 +8276,15 @@ static void do_sched_yield(void)
	struct rq_flags rf;
	struct rq *rq;

+	if (!sysctl_sched_yield_type)
+		return;
+
	rq = this_rq_lock_irq(&rf);

	schedstat_inc(rq->yld_count);
-	current->sched_class->yield_task(rq);
+
+	if (sysctl_sched_yield_type > 1)
+		current->sched_class->yield_task(rq);

	preempt_disable();
	rq_unlock_irq(rq, &rf);
diff --git a/kernel/sysctl.c b/kernel/sysctl.c
index 673a6f56ebd5..fad0428745f0 100644
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@ -91,6 +91,7 @@ static const int six_hundred_forty_kb = 640 * 1024;
 #endif


+extern int sysctl_sched_yield_type;
 static const int ngroups_max = NGROUPS_MAX;
 static const int cap_last_cap = CAP_LAST_CAP;

@@ -1653,6 +1654,15 @@ static struct ctl_table kern_table[] = {
		.mode		= 0644,
		.proc_handler	= proc_dointvec,
	},
+	{
+		.procname	= "yield_type",
+		.data		= &sysctl_sched_yield_type,
+		.maxlen		= sizeof (int),
+		.mode		= 0644,
+		.proc_handler	= proc_dointvec,
+		.extra1		= SYSCTL_ZERO,
+		.extra2		= SYSCTL_TWO,
+	},
 #ifdef CONFIG_PROC_SYSCTL
	{
		.procname	= "tainted",
--
2.35.1
